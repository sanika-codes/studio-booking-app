[{"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\index.js":"1","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\App.js":"2","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeFirstSection.js":"3","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeFourthSection.js":"4","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeBookingSection.js":"5","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeSecondSection.js":"6","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\Plans.js":"7","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\SelectPlan.js":"8","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\PersonalInfo.js":"9","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\StepsPanel.js":"10","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\SelectHours.js":"11","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\Event.js":"12","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\SelectDate.js":"13","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\FullDayBooking.js":"14","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\MonthlyBooking.js":"15","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\TNC.js":"16","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\Payment.js":"17"},{"size":211,"mtime":1692093194307,"results":"18","hashOfConfig":"19"},{"size":483,"mtime":1690194204493,"results":"20","hashOfConfig":"19"},{"size":592,"mtime":1691658021743,"results":"21","hashOfConfig":"19"},{"size":1299,"mtime":1691498691253,"results":"22","hashOfConfig":"19"},{"size":2298,"mtime":1692943502280,"results":"23","hashOfConfig":"19"},{"size":1367,"mtime":1691497934690,"results":"24","hashOfConfig":"19"},{"size":1612,"mtime":1692768287979,"results":"25","hashOfConfig":"19"},{"size":4478,"mtime":1693197243793,"results":"26","hashOfConfig":"19"},{"size":2078,"mtime":1692770869451,"results":"27","hashOfConfig":"19"},{"size":465,"mtime":1691514772967,"results":"28","hashOfConfig":"19"},{"size":11943,"mtime":1692936579133,"results":"29","hashOfConfig":"19"},{"size":999,"mtime":1692258059300,"results":"30","hashOfConfig":"19"},{"size":619,"mtime":1692463953212,"results":"31","hashOfConfig":"19"},{"size":1540,"mtime":1692715711276,"results":"32","hashOfConfig":"19"},{"size":520,"mtime":1692934094442,"results":"33","hashOfConfig":"19"},{"size":4858,"mtime":1692943400877,"results":"34","hashOfConfig":"19"},{"size":381,"mtime":1692943694953,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1wwzkhy",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\index.js",[],[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\App.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeFirstSection.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeFourthSection.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeBookingSection.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\HomeSecondSection.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\Plans.js",["95"],[],"import React, {useState} from \"react\";\r\n\r\nimport classes from \"./Plans.module.css\";\r\n\r\nconst Plans = (props) => {\r\n // const [step1Visible, setStep1Visible] = useState(false);\r\n\r\n  const clickHandler = (evt) => {\r\n    props.onUserClickPlan(evt.target.id);\r\n  }\r\n  \r\n  return (\r\n  <div className={`${classes['main-booking']} container c-row`}>\r\n    <h2>Your plan, your choice</h2>\r\n    <p className=\"text extra-margin five-margin-down\">Unlock your creative potential with Vibini Creates</p>\r\n    <div className={` container ${classes['booking-option']} ${classes.monthly}`}>\r\n        <h3>Monthly subscription</h3>\r\n        <h4>Rs. 6000 </h4><span>per month</span>\r\n        <p className=\"extra-margin\">Pay for an entire month and save Rs. 2000</p>\r\n        <button className={classes.bookButton} onClick={clickHandler} id=\"monthly\">SEND ENQUIRY</button>\r\n\r\n    </div>\r\n    <div className={` container ${classes['booking-option']} ${classes['one-day']}`}>\r\n        <h3>One day subscription</h3>\r\n        <h4>Rs. 1800 </h4><span>for 9 hours</span>\r\n        <p>Pay for an entire month and save Rs. 2000</p>\r\n        <button className={classes.bookButton} onClick={clickHandler} id=\"oneday\">BOOK NOW</button>\r\n\r\n    </div>\r\n    <div className={` container ${classes['booking-option']} ${classes.hourly}`}>\r\n        <h3>Hourly subscription</h3>\r\n        <h4>Rs. 900 </h4><span>for a day</span>\r\n        <p>Pay for an entire month and save Rs. 2000</p>\r\n        <button className={classes.bookButton} onClick={clickHandler} id=\"hourly\">BOOK NOW</button>\r\n\r\n    </div>\r\n    \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Plans;\r\n","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\SelectPlan.js",["96"],[],"import React, { useState } from \"react\";\r\n\r\nimport styles from \"./SelectPlan.module.css\";\r\nimport StepsPanel from \"./StepsPanel\";\r\nimport MonthlyBooking from \"./MonthlyBooking\";\r\n\r\nimport SelectHours from \"./SelectHours\";\r\nimport SelectDate from \"./SelectDate\";\r\nimport moment from \"moment\";\r\n\r\nconst SelectPlan = (props) => {\r\n  const [selectedPlanValue, setSelectedPlanValue] = useState(props.plan);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedDateRange, setSelectedDateRange] = useState([\"\",\"\"]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageDivClass, setMessageDivClass] = useState(\"\");\r\n \r\n\r\n  const planSelectHandler = (evt) => {\r\n    if (evt.target.value === \"hourly\") setSelectedPlanValue(\"hourly\");\r\n    else if (evt.target.value === \"oneday\") setSelectedPlanValue(\"oneday\");\r\n    else setSelectedPlanValue(\"monthly\");\r\n  };\r\n\r\n  const dateChangeHandler = (date) => {\r\n    setSelectedDate(date);\r\n   \r\n  };\r\n\r\n  const dateRangeChangeHandler = (dateRange) => {\r\n    setSelectedDateRange([dateRange[0],dateRange[1]]);\r\n    setMessage(\"You have selected \" + moment(dateRange[0]).format(\"MMMM Do YYYY\") + \" to \" + moment(dateRange[1]).format(\"MMMM Do YYYY\"));\r\n    \r\n  };\r\n  const slotsClickHandler = (clickedSlot) => {\r\n    \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if(selectedPlanValue === \"monthly\"){\r\n      let enquiryData = {\r\n        name : props.userDetails.name,\r\n        email : props.userDetails.email,\r\n        phone : props.userDetails.phone,\r\n        dates : [moment(selectedDateRange[0]).format(\"MMMM Do YYYY\"),moment(selectedDateRange[1]).format(\"MMMM Do YYYY\")]\r\n      }\r\n      \r\n      let response = await fetch(\"/send\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(enquiryData),\r\n      });\r\n      \r\n      //let result = await response.json();\r\n      \r\n      setMessage(\"Thank you. We have received your enquiry and we will get in touch with you within 1 business day.)\");\r\n      setSelectedDateRange([\"\",\"\"]);\r\n      setMessageDivClass(\"thank-you\");\r\n    }\r\n    else if(selectedPlanValue === \"oneday\"){\r\n      props.userDetails.date = selectedDate;\r\n      props.userDetails.time = [selectedDate.setHours(6, 0, 0) , selectedDate.setHours(20, 0, 0)];\r\n      props.onClickProceed();\r\n    }\r\n     \r\n  };\r\n\r\n  return (\r\n    <div className=\"container c-row no-padding select-plan no-wrap\">\r\n      <StepsPanel />\r\n      <div className={`container ${styles.formDiv} `}>\r\n        <h2 className=\"heading-normal\">Enter booking details</h2>\r\n        <form action=\"#\" method=\"post\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"selectPlan\">Select Plan</label>\r\n          <select\r\n            id=\"selectPlan\"\r\n            defaultValue={selectedPlanValue}\r\n            onChange={planSelectHandler}\r\n          >\r\n            <option value=\"hourly\">Hourly</option>\r\n            <option value=\"oneday\">Full day ( 9 hours )</option>\r\n            <option value=\"monthly\">Monthly</option>\r\n          </select>\r\n\r\n          \r\n\r\n          {(selectedPlanValue === \"hourly\") ? (\r\n            <>\r\n            <SelectDate onDateChange={dateChangeHandler} date={selectedDate} plan={selectedPlanValue}/>\r\n            <SelectHours\r\n              date={moment(selectedDate)}\r\n              onSlotClick={slotsClickHandler}\r\n            />\r\n             <button type=\"submit\" className=\"hover-effect\">\r\n            Proceed\r\n          </button>\r\n           \r\n          </>\r\n          ) : (selectedPlanValue === \"monthly\") ? (\r\n            <>\r\n             <MonthlyBooking userDetails={props.userDetails} onDateRangeSelect={dateRangeChangeHandler}/> \r\n             {message.length > 0 ? <div id={styles.selections} className={messageDivClass !== \"\" ? styles['thank-you'] : ''}>\r\n              <h3>{message}</h3>\r\n             </div> : <></>}\r\n             \r\n             <button type=\"submit\" className=\"hover-effect\">\r\n            Send Enquiry\r\n          </button>\r\n             </>\r\n           \r\n          ) : (\r\n            <>\r\n            <SelectDate onDateChange={dateChangeHandler} date={selectedDate} plan={selectedPlanValue}/>\r\n            <button type=\"submit\" className=\"hover-effect\">\r\n            Proceed\r\n          </button>\r\n          </>\r\n          )}\r\n\r\n         \r\n\r\n         \r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectPlan;\r\n","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\PersonalInfo.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\StepsPanel.js",["97"],[],"import React, { useState } from \"react\";\r\n\r\nimport classes from \"./StepsPanel.module.css\";\r\n\r\nconst StepsPanel = () => {\r\n  return (\r\n    <aside className={`container ${classes.sideMain} `}>\r\n      <ol>\r\n        <li>Enter personal details</li>\r\n        <hr />\r\n        <li>Enter booking details</li>\r\n        <hr />\r\n        <li>Terms and Conditions</li>\r\n        <hr />\r\n        <li>Payment</li>\r\n      </ol>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default StepsPanel;\r\n","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\SelectHours.js",["98","99","100","101","102"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./SelectHours.module.css\";\r\nimport moment from \"moment\";\r\n\r\nconst SelectHours = (props) => {\r\n  const timeSlotsInitialState = [\r\n    {\r\n      label: \"6am - 7am\",\r\n      fromLabel: \"6am\",\r\n      toLabel: \"7am\",\r\n      value: 6,\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 0,\r\n    },\r\n    {\r\n      label: \"7am - 8am\",\r\n      fromLabel: \"7am\",\r\n      toLabel: \"8am\",\r\n      value: 7,\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 1,\r\n    },\r\n    {\r\n      label: \"8am - 9am\",\r\n      fromLabel: \"8am\",\r\n      toLabel: \"9am\",\r\n      value: 8,\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 2,\r\n    },\r\n    {\r\n      label: \"9am - 10am\",\r\n      fromLabel: \"9am\",\r\n      toLabel: \"10am\",\r\n      value: 9,\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 3,\r\n    },\r\n    {\r\n      label: \"10am - 11am\",\r\n      fromLabel: \"10am\",\r\n      toLabel: \"11am\",\r\n      value: 10,\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 4,\r\n    },\r\n    {\r\n      label: \"11am - 12 am\",\r\n      fromLabel: \"11am\",\r\n      toLabel: \"12am\",\r\n      value: 11,\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 5,\r\n    },\r\n    {\r\n      label: \"12pm - 1pm\",\r\n      value: 12,\r\n      fromLabel: \"12pm\",\r\n      toLabel: \"1pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 6,\r\n    },\r\n    {\r\n      label: \"1pm - 2pm\",\r\n      value: 13,\r\n      fromLabel: \"1pm\",\r\n      toLabel: \"2pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 7,\r\n    },\r\n    {\r\n      label: \"2pm - 3pm\",\r\n      value: 14,\r\n      fromLabel: \"2pm\",\r\n      toLabel: \"3pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 8,\r\n    },\r\n    {\r\n      label: \"3pm - 4pm\",\r\n      value: 15,\r\n      fromLabel: \"3pm\",\r\n      toLabel: \"4pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 9,\r\n    },\r\n    {\r\n      label: \"4pm - 5pm\",\r\n      value: 16,\r\n      fromLabel: \"4pm\",\r\n      toLabel: \"5pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 10,\r\n    },\r\n    {\r\n      label: \"5pm - 6pm\",\r\n      value: 17,\r\n      fromLabel: \"5pm\",\r\n      toLabel: \"6pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 11,\r\n    },\r\n    {\r\n      label: \"6pm - 7pm\",\r\n      value: 18,\r\n      fromLabel: \"6pm\",\r\n      toLabel: \"7pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 12,\r\n    },\r\n    {\r\n      label: \"7pm - 8pm\",\r\n      value: 19,\r\n      fromLabel: \"7pm\",\r\n      toLabel: \"8pm\",\r\n      disabled: false,\r\n      selected: \"false\",\r\n      arrIndex: 13,\r\n    },\r\n  ];\r\n  const timeSlotsInitialDisabledState = [\r\n    {\r\n      label: \"6am - 7am\",\r\n      fromLabel: \"6am\",\r\n      toLabel: \"7am\",\r\n      value: 6,\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 0,\r\n    },\r\n    {\r\n      label: \"7am - 8am\",\r\n      value: 7,\r\n      fromLabel: \"7am\",\r\n      toLabel: \"8am\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 1,\r\n    },\r\n    {\r\n      label: \"8am - 9am\",\r\n      value: 8,\r\n      fromLabel: \"8am\",\r\n      toLabel: \"9am\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 2,\r\n    },\r\n    {\r\n      label: \"9am - 10am\",\r\n      value: 9,\r\n      fromLabel: \"9am\",\r\n      toLabel: \"10am\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 3,\r\n    },\r\n    {\r\n      label: \"10am - 11am\",\r\n      value: 10,\r\n      fromLabel: \"10am\",\r\n      toLabel: \"11am\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 4,\r\n    },\r\n    {\r\n      label: \"11am - 12pm\",\r\n      value: 11,\r\n      fromLabel: \"11am\",\r\n      toLabel: \"12pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 5,\r\n    },\r\n    {\r\n      label: \"12pm - 1pm\",\r\n      value: 12,\r\n      fromLabel: \"12pm\",\r\n      toLabel: \"1pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 6,\r\n    },\r\n    {\r\n      label: \"1pm - 2pm\",\r\n      value: 13,\r\n      fromLabel: \"1pm\",\r\n      toLabel: \"2pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 7,\r\n    },\r\n    {\r\n      label: \"2pm - 3pm\",\r\n      value: 14,\r\n      fromLabel: \"2pm\",\r\n      toLabel: \"3pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 8,\r\n    },\r\n    {\r\n      label: \"3pm - 4pm\",\r\n      value: 15,\r\n      fromLabel: \"3pm\",\r\n      toLabel: \"4pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 9,\r\n    },\r\n    {\r\n      label: \"4pm - 5pm\",\r\n      value: 16,\r\n      fromLabel: \"4pm\",\r\n      toLabel: \"5pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 10,\r\n    },\r\n    {\r\n      label: \"5pm - 6pm\",\r\n      value: 17,\r\n      fromLabel: \"5pm\",\r\n      toLabel: \"6pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 11,\r\n    },\r\n    {\r\n      label: \"6pm - 7pm\",\r\n      value: 18,\r\n      fromLabel: \"6pm\",\r\n      toLabel: \"7pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 12,\r\n    },\r\n    {\r\n      label: \"7pm - 8pm\",\r\n      value: 19,\r\n      fromLabel: \"7pm\",\r\n      toLabel: \"8pm\",\r\n      disabled: true,\r\n      selected: \"false\",\r\n      arrIndex: 13,\r\n    },\r\n  ];\r\n\r\n  const [timeSlots, setTimeSlots] = useState(timeSlotsInitialDisabledState);\r\n  const [selectedTimeSlot1, setSelectedTimeSlot1] = useState(\"\");\r\n  const [selectedTimeSlot2, setSelectedTimeSlot2] = useState(\"\");\r\n  const [time, setTime] = useState([-1, -1]);\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(props.date)) {\r\n      let dateFrom = new Date(props.date);\r\n      dateFrom.setHours(6, 0, 0);\r\n      dateFrom = dateFrom.toISOString();\r\n      let dateTo = new Date(props.date);\r\n      dateTo.setHours(20, 0, 0);\r\n      dateTo = dateTo.toISOString();\r\n\r\n      const apiURL =\r\n        \"/api/freeBusyData/dateFrom/\" + dateFrom + \"/dateTo/\" + dateTo;\r\n      fetch(apiURL)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (data) => {\r\n            //Data is received as an array if more than 1 busy events are found. If 1 event is found an object is returned.\r\n            let from, to, toMinutes;\r\n               console.log(data);\r\n            if (data.busyData !== undefined) {\r\n              data.busyData.forEach((element) => {\r\n                from = new Date(element.start).getHours();\r\n                to = new Date(element.end).getHours();\r\n                toMinutes = new Date(element.end).getMinutes();\r\n                if (toMinutes > 0) to = to + 1;\r\n                  console.log(\"from :\" + from + \"to:\" + to);\r\n\r\n                let updatedSlots = timeSlotsInitialState;\r\n                for (let i = from; i < to; i++) {\r\n                  let index = timeSlots.findIndex((e) => e.value === i);\r\n                  //  console.log(\"index is\" + index);\r\n\r\n                  updatedSlots[index].disabled = true;\r\n                }\r\n                \r\n                setTimeSlots(updatedSlots);\r\n                console.log(timeSlots);\r\n                setSelectedTimeSlot1(\"\");\r\n                setSelectedTimeSlot2(\"\");\r\n                setTime([-1, -1]);\r\n              });\r\n            } else {\r\n              //No busy slots found on this date\r\n              setTimeSlots(timeSlotsInitialState);\r\n              setSelectedTimeSlot1(\"\");\r\n              setSelectedTimeSlot2(\"\");\r\n              setTime([-1, -1]);\r\n            }\r\n          },\r\n          function (error) {\r\n            console.log(\"Error : \" + error);\r\n          }\r\n        );\r\n    }\r\n  }, [props.date]);\r\n\r\n  //Code that makes all slots between selected range marked as selected. Runs when second slot is selected.\r\n  useEffect(() => {\r\n    let from = timeSlots.findIndex((s) => s.label === selectedTimeSlot1);\r\n    let to = timeSlots.findIndex((s) => s.label === selectedTimeSlot2);\r\n\r\n    if (from > to) {\r\n      //User has selected 'to' time first and then 'from' time. In this case we have to reverse the values\r\n      let temp = from;\r\n      from = to;\r\n      to = temp;\r\n    }\r\n    let updatedSlots = timeSlots.map((slot) => {\r\n      if (slot.arrIndex >= from && slot.arrIndex <= to) {\r\n        return { ...slot, selected: \"true\" };\r\n      }\r\n      return slot;\r\n    });\r\n    setTimeSlots(updatedSlots);\r\n    if (timeSlots[from] && timeSlots[to])\r\n      setTime([timeSlots[from].fromLabel, timeSlots[to].toLabel]);\r\n  }, [selectedTimeSlot2]);\r\n\r\n  const checkRangeIsValid = (secondSlot) => {\r\n    //checks whether user has selected a slot of upto 4 hours\r\n\r\n    let from = timeSlots.findIndex((s) => s.label === selectedTimeSlot1);\r\n    let to = timeSlots.findIndex((s) => s.arrIndex == secondSlot);\r\n    if (from > to) {\r\n      let temp = from;\r\n      from = to;\r\n      to = temp;\r\n    }\r\n    if (to - from > 3) return false;\r\n    else return true;\r\n  };\r\n\r\n  const selectSlotHandler = (evt) => {\r\n    evt.preventDefault();\r\n    if (selectedTimeSlot1 === \"\" || selectedTimeSlot2 === \"\") {\r\n      if (selectedTimeSlot1 === \"\") {\r\n        setSelectedTimeSlot1(evt.target.name);\r\n        let updatedSlots = timeSlots.map((slot) => {\r\n          if (slot.arrIndex == evt.target.getAttribute(\"arrindex\")) {\r\n            return { ...slot, selected: \"true\" };\r\n          }\r\n          return slot;\r\n        });\r\n        setTimeSlots(updatedSlots);\r\n        setTime([\r\n          timeSlots[evt.target.getAttribute(\"arrindex\")].fromLabel,\r\n          timeSlots[evt.target.getAttribute(\"arrindex\")].toLabel,\r\n        ]);\r\n      } else if (selectedTimeSlot2 === \"\") {\r\n        if (checkRangeIsValid(evt.target.getAttribute(\"arrindex\"))) {\r\n          setSelectedTimeSlot2(evt.target.name);\r\n          let updatedSlots = timeSlots.map((slot) => {\r\n            if (slot.arrIndex == evt.target.getAttribute(\"arrindex\")) {\r\n              return { ...slot, selected: \"true\" };\r\n            }\r\n            return slot;\r\n          });\r\n          setTimeSlots(updatedSlots);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetHandler = (evt) => {\r\n    evt.preventDefault();\r\n    let from = timeSlots.findIndex((s) => s.label === selectedTimeSlot1);\r\n    let to = timeSlots.findIndex((s) => s.label === selectedTimeSlot2);\r\n\r\n    if (from > to) {\r\n      let temp = from;\r\n      from = to;\r\n      to = temp;\r\n    }\r\n\r\n    let updatedSlots = timeSlots.map((slot) => {\r\n      if (slot.arrIndex >= from && slot.arrIndex <= to) {\r\n        return { ...slot, selected: \"false\" };\r\n      }\r\n      return slot;\r\n    });\r\n    setTimeSlots(updatedSlots);\r\n    setSelectedTimeSlot1(\"\");\r\n    setSelectedTimeSlot2(\"\");\r\n    setTime([-1, -1]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Select time slot ( You may select a range of up to 4 hours)</label>\r\n      <div id={styles.timeSlots}>\r\n        <ul id={styles.timeSlotUl}>\r\n          {props.date\r\n            ? timeSlots.map((slot) => (\r\n                <li key={slot.value} className={styles.timeSlotLi}>\r\n                  <button\r\n                    id={slot.value}\r\n                    arrindex={slot.arrIndex}\r\n                    name={slot.label}\r\n                    className={styles.timeSlot}\r\n                    disabled={slot.disabled}\r\n                    selectedslot={slot.selected}\r\n                    onClick={selectSlotHandler}\r\n                  >\r\n                    {slot.label}\r\n                  </button>\r\n                </li>\r\n              ))\r\n            : \"\"}\r\n        </ul>\r\n      </div>\r\n\r\n      <button className={styles.reset} onClick={resetHandler}>\r\n        RESET TIME-SLOTS\r\n      </button>\r\n      <div id={styles.selections}>\r\n        <h3>You have selected : </h3>\r\n        <p>\r\n          Date :\r\n          {props.date\r\n            ? \" \" + moment(props.date).format(\"MMMM Do YYYY\")\r\n            : \"No date selected\"}\r\n        </p>\r\n        <p>\r\n          Time slot : {time[0] === -1 ? \"___\" : time[0]} to{\" \"}\r\n          {time[1] === -1 ? \"___\" : time[1]}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectHours;\r\n",[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\Event.js",["103"],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\SelectDate.js",["104","105"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport FullDayBooking from \"./FullDayBooking\";\r\n\r\n\r\n\r\nconst SelectDate = (props) => {\r\n\r\n   \r\n\r\n    const dateChangeHandler = (evt) => {\r\n       \r\n       props.onDateChange(evt);\r\n    };\r\n\r\n  return (\r\n    <>\r\n    <label htmlFor=\"selectDate\">Choose a date</label>\r\n    <Calendar id=\"selectDate\" minDate={new Date()} value={props.date} onChange={dateChangeHandler} />\r\n    {\r\n        props.plan === \"oneday\" ? \r\n        <FullDayBooking date={props.date}/>\r\n        : ''\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectDate;\r\n","D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\FullDayBooking.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\MonthlyBooking.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\TNC.js",[],[],"D:\\Amber Horizons\\Clients\\Vibini Creates\\client\\src\\components\\Booking\\Payment.js",["106"],[],"import React, { useState } from \"react\";\r\nimport StepsPanel from \"./StepsPanel\";\r\n\r\nconst Payment = (props) => {\r\n    return (\r\n        <div className=\"container c-row no-padding payment no-wrap\">\r\n      <StepsPanel />\r\n        <div className={`container`}>\r\n        <h2 className=\"heading-normal\">Payment</h2>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payment;",{"ruleId":"107","severity":1,"message":"108","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"111","line":49,"column":11,"nodeType":"109","messageId":"110","endLine":49,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":321,"column":6,"nodeType":"114","endLine":321,"endColumn":18,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":343,"column":6,"nodeType":"114","endLine":343,"endColumn":25,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":349,"column":52,"nodeType":"120","messageId":"121","endLine":349,"endColumn":54},{"ruleId":"118","severity":1,"message":"119","line":365,"column":29,"nodeType":"120","messageId":"121","endLine":365,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":379,"column":31,"nodeType":"120","messageId":"121","endLine":379,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":24,"column":15,"nodeType":"120","messageId":"121","endLine":24,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"122","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'timeSlots' and 'timeSlotsInitialState'. Either include them or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has missing dependencies: 'selectedTimeSlot1' and 'timeSlots'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTime' needs the current value of 'timeSlots'.",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [props.date, timeSlots, timeSlotsInitialState]",{"range":"129","text":"130"},"Update the dependencies array to be: [selectedTimeSlot1, selectedTimeSlot2, timeSlots]",{"range":"131","text":"132"},[7531,7543],"[props.date, timeSlots, timeSlotsInitialState]",[8369,8388],"[selectedTimeSlot1, selectedTimeSlot2, timeSlots]"]