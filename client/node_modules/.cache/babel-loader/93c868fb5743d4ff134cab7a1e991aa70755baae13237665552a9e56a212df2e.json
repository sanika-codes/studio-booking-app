{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthPlus = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n  constructor() {\n    super(...arguments);\n    this.JWT = google_auth_library_1.JWT;\n    this.Compute = google_auth_library_1.Compute;\n    this.OAuth2 = google_auth_library_1.OAuth2Client;\n    this.GoogleAuth = google_auth_library_1.GoogleAuth;\n    this.AwsClient = google_auth_library_1.AwsClient;\n    this.IdentityPoolClient = google_auth_library_1.IdentityPoolClient;\n    this.ExternalAccountClient = google_auth_library_1.ExternalAccountClient;\n  }\n  /**\n   * Override getClient(), memoizing an instance of auth for\n   * subsequent calls to getProjectId().\n   */\n  async getClient(options) {\n    this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n    return this._cachedAuth.getClient();\n  }\n  getProjectId(callback) {\n    if (callback) {\n      return this._cachedAuth ? this._cachedAuth.getProjectId(callback) : super.getProjectId(callback);\n    } else {\n      return this._cachedAuth ? this._cachedAuth.getProjectId() : super.getProjectId();\n    }\n  }\n}\nexports.AuthPlus = AuthPlus;","map":{"version":3,"names":["Object","defineProperty","exports","value","AuthPlus","google_auth_library_1","require","GoogleAuth","constructor","arguments","JWT","Compute","OAuth2","OAuth2Client","AwsClient","IdentityPoolClient","ExternalAccountClient","getClient","options","_cachedAuth","getProjectId","callback"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis-common/build/src/authplus.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthPlus = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n    constructor() {\n        super(...arguments);\n        this.JWT = google_auth_library_1.JWT;\n        this.Compute = google_auth_library_1.Compute;\n        this.OAuth2 = google_auth_library_1.OAuth2Client;\n        this.GoogleAuth = google_auth_library_1.GoogleAuth;\n        this.AwsClient = google_auth_library_1.AwsClient;\n        this.IdentityPoolClient = google_auth_library_1.IdentityPoolClient;\n        this.ExternalAccountClient = google_auth_library_1.ExternalAccountClient;\n    }\n    /**\n     * Override getClient(), memoizing an instance of auth for\n     * subsequent calls to getProjectId().\n     */\n    async getClient(options) {\n        this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n        return this._cachedAuth.getClient();\n    }\n    getProjectId(callback) {\n        if (callback) {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId(callback)\n                : super.getProjectId(callback);\n        }\n        else {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId()\n                : super.getProjectId();\n        }\n    }\n}\nexports.AuthPlus = AuthPlus;\n//# sourceMappingURL=authplus.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC5D,MAAMF,QAAQ,SAASC,qBAAqB,CAACE,UAAU,CAAC;EACpDC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,GAAG,GAAGL,qBAAqB,CAACK,GAAG;IACpC,IAAI,CAACC,OAAO,GAAGN,qBAAqB,CAACM,OAAO;IAC5C,IAAI,CAACC,MAAM,GAAGP,qBAAqB,CAACQ,YAAY;IAChD,IAAI,CAACN,UAAU,GAAGF,qBAAqB,CAACE,UAAU;IAClD,IAAI,CAACO,SAAS,GAAGT,qBAAqB,CAACS,SAAS;IAChD,IAAI,CAACC,kBAAkB,GAAGV,qBAAqB,CAACU,kBAAkB;IAClE,IAAI,CAACC,qBAAqB,GAAGX,qBAAqB,CAACW,qBAAqB;EAC5E;EACA;AACJ;AACA;AACA;EACI,MAAMC,SAASA,CAACC,OAAO,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,IAAId,qBAAqB,CAACE,UAAU,CAACW,OAAO,CAAC;IAChE,OAAO,IAAI,CAACC,WAAW,CAACF,SAAS,CAAC,CAAC;EACvC;EACAG,YAAYA,CAACC,QAAQ,EAAE;IACnB,IAAIA,QAAQ,EAAE;MACV,OAAO,IAAI,CAACF,WAAW,GACjB,IAAI,CAACA,WAAW,CAACC,YAAY,CAACC,QAAQ,CAAC,GACvC,KAAK,CAACD,YAAY,CAACC,QAAQ,CAAC;IACtC,CAAC,MACI;MACD,OAAO,IAAI,CAACF,WAAW,GACjB,IAAI,CAACA,WAAW,CAACC,YAAY,CAAC,CAAC,GAC/B,KAAK,CAACA,YAAY,CAAC,CAAC;IAC9B;EACJ;AACJ;AACAlB,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}