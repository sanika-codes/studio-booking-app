{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.businessprofileperformance_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar businessprofileperformance_v1;\n(function (businessprofileperformance_v1) {\n  /**\n   * Business Profile Performance API\n   *\n   * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const businessprofileperformance = google.businessprofileperformance('v1');\n   * ```\n   */\n  class Businessprofileperformance {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.locations = new Resource$Locations(this.context);\n    }\n  }\n  businessprofileperformance_v1.Businessprofileperformance = Businessprofileperformance;\n  class Resource$Locations {\n    constructor(context) {\n      this.context = context;\n      this.searchkeywords = new Resource$Locations$Searchkeywords(this.context);\n    }\n    fetchMultiDailyMetricsTimeSeries(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+location}:fetchMultiDailyMetricsTimeSeries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['location'],\n        pathParams: ['location'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getDailyMetricsTimeSeries(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:getDailyMetricsTimeSeries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  businessprofileperformance_v1.Resource$Locations = Resource$Locations;\n  class Resource$Locations$Searchkeywords {\n    constructor(context) {\n      this.context = context;\n      this.impressions = new Resource$Locations$Searchkeywords$Impressions(this.context);\n    }\n  }\n  businessprofileperformance_v1.Resource$Locations$Searchkeywords = Resource$Locations$Searchkeywords;\n  class Resource$Locations$Searchkeywords$Impressions {\n    constructor(context) {\n      this.context = context;\n      this.monthly = new Resource$Locations$Searchkeywords$Impressions$Monthly(this.context);\n    }\n  }\n  businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions = Resource$Locations$Searchkeywords$Impressions;\n  class Resource$Locations$Searchkeywords$Impressions$Monthly {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/searchkeywords/impressions/monthly').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions$Monthly = Resource$Locations$Searchkeywords$Impressions$Monthly;\n})(businessprofileperformance_v1 || (exports.businessprofileperformance_v1 = businessprofileperformance_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","businessprofileperformance_v1","googleapis_common_1","require","Businessprofileperformance","constructor","options","google","context","_options","locations","Resource$Locations","searchkeywords","Resource$Locations$Searchkeywords","fetchMultiDailyMetricsTimeSeries","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","getDailyMetricsTimeSeries","impressions","Resource$Locations$Searchkeywords$Impressions","monthly","Resource$Locations$Searchkeywords$Impressions$Monthly","list"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis/build/src/apis/businessprofileperformance/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.businessprofileperformance_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar businessprofileperformance_v1;\n(function (businessprofileperformance_v1) {\n    /**\n     * Business Profile Performance API\n     *\n     * The Business Profile Performance API allows merchants to fetch performance reports about their business profile on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const businessprofileperformance = google.businessprofileperformance('v1');\n     * ```\n     */\n    class Businessprofileperformance {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.locations = new Resource$Locations(this.context);\n        }\n    }\n    businessprofileperformance_v1.Businessprofileperformance = Businessprofileperformance;\n    class Resource$Locations {\n        constructor(context) {\n            this.context = context;\n            this.searchkeywords = new Resource$Locations$Searchkeywords(this.context);\n        }\n        fetchMultiDailyMetricsTimeSeries(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+location}:fetchMultiDailyMetricsTimeSeries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['location'],\n                pathParams: ['location'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getDailyMetricsTimeSeries(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:getDailyMetricsTimeSeries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations = Resource$Locations;\n    class Resource$Locations$Searchkeywords {\n        constructor(context) {\n            this.context = context;\n            this.impressions = new Resource$Locations$Searchkeywords$Impressions(this.context);\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations$Searchkeywords = Resource$Locations$Searchkeywords;\n    class Resource$Locations$Searchkeywords$Impressions {\n        constructor(context) {\n            this.context = context;\n            this.monthly = new Resource$Locations$Searchkeywords$Impressions$Monthly(this.context);\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions = Resource$Locations$Searchkeywords$Impressions;\n    class Resource$Locations$Searchkeywords$Impressions$Monthly {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://businessprofileperformance.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/searchkeywords/impressions/monthly').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    businessprofileperformance_v1.Resource$Locations$Searchkeywords$Impressions$Monthly = Resource$Locations$Searchkeywords$Impressions$Monthly;\n})(businessprofileperformance_v1 || (exports.businessprofileperformance_v1 = businessprofileperformance_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}