{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ideahub_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar ideahub_v1alpha;\n(function (ideahub_v1alpha) {\n  /**\n   * Idea Hub API\n   *\n   * This is an invitation-only API.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const ideahub = google.ideahub('v1alpha');\n   * ```\n   */\n  class Ideahub {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.ideas = new Resource$Ideas(this.context);\n      this.platforms = new Resource$Platforms(this.context);\n    }\n  }\n  ideahub_v1alpha.Ideahub = Ideahub;\n  class Resource$Ideas {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/ideas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  ideahub_v1alpha.Resource$Ideas = Resource$Ideas;\n  class Resource$Platforms {\n    constructor(context) {\n      this.context = context;\n      this.properties = new Resource$Platforms$Properties(this.context);\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms = Resource$Platforms;\n  class Resource$Platforms$Properties {\n    constructor(context) {\n      this.context = context;\n      this.ideaActivities = new Resource$Platforms$Properties$Ideaactivities(this.context);\n      this.ideas = new Resource$Platforms$Properties$Ideas(this.context);\n      this.ideaStates = new Resource$Platforms$Properties$Ideastates(this.context);\n      this.locales = new Resource$Platforms$Properties$Locales(this.context);\n      this.topicStates = new Resource$Platforms$Properties$Topicstates(this.context);\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms$Properties = Resource$Platforms$Properties;\n  class Resource$Platforms$Properties$Ideaactivities {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/ideaActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms$Properties$Ideaactivities = Resource$Platforms$Properties$Ideaactivities;\n  class Resource$Platforms$Properties$Ideas {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/ideas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms$Properties$Ideas = Resource$Platforms$Properties$Ideas;\n  class Resource$Platforms$Properties$Ideastates {\n    constructor(context) {\n      this.context = context;\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms$Properties$Ideastates = Resource$Platforms$Properties$Ideastates;\n  class Resource$Platforms$Properties$Locales {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/locales').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms$Properties$Locales = Resource$Platforms$Properties$Locales;\n  class Resource$Platforms$Properties$Topicstates {\n    constructor(context) {\n      this.context = context;\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  ideahub_v1alpha.Resource$Platforms$Properties$Topicstates = Resource$Platforms$Properties$Topicstates;\n})(ideahub_v1alpha || (exports.ideahub_v1alpha = ideahub_v1alpha = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","ideahub_v1alpha","googleapis_common_1","require","Ideahub","constructor","options","google","context","_options","ideas","Resource$Ideas","platforms","Resource$Platforms","list","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","properties","Resource$Platforms$Properties","ideaActivities","Resource$Platforms$Properties$Ideaactivities","Resource$Platforms$Properties$Ideas","ideaStates","Resource$Platforms$Properties$Ideastates","locales","Resource$Platforms$Properties$Locales","topicStates","Resource$Platforms$Properties$Topicstates","create","patch"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis/build/src/apis/ideahub/v1alpha.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ideahub_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar ideahub_v1alpha;\n(function (ideahub_v1alpha) {\n    /**\n     * Idea Hub API\n     *\n     * This is an invitation-only API.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const ideahub = google.ideahub('v1alpha');\n     * ```\n     */\n    class Ideahub {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.ideas = new Resource$Ideas(this.context);\n            this.platforms = new Resource$Platforms(this.context);\n        }\n    }\n    ideahub_v1alpha.Ideahub = Ideahub;\n    class Resource$Ideas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/ideas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    ideahub_v1alpha.Resource$Ideas = Resource$Ideas;\n    class Resource$Platforms {\n        constructor(context) {\n            this.context = context;\n            this.properties = new Resource$Platforms$Properties(this.context);\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms = Resource$Platforms;\n    class Resource$Platforms$Properties {\n        constructor(context) {\n            this.context = context;\n            this.ideaActivities = new Resource$Platforms$Properties$Ideaactivities(this.context);\n            this.ideas = new Resource$Platforms$Properties$Ideas(this.context);\n            this.ideaStates = new Resource$Platforms$Properties$Ideastates(this.context);\n            this.locales = new Resource$Platforms$Properties$Locales(this.context);\n            this.topicStates = new Resource$Platforms$Properties$Topicstates(this.context);\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms$Properties = Resource$Platforms$Properties;\n    class Resource$Platforms$Properties$Ideaactivities {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/ideaActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms$Properties$Ideaactivities = Resource$Platforms$Properties$Ideaactivities;\n    class Resource$Platforms$Properties$Ideas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/ideas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms$Properties$Ideas = Resource$Platforms$Properties$Ideas;\n    class Resource$Platforms$Properties$Ideastates {\n        constructor(context) {\n            this.context = context;\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms$Properties$Ideastates = Resource$Platforms$Properties$Ideastates;\n    class Resource$Platforms$Properties$Locales {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/locales').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms$Properties$Locales = Resource$Platforms$Properties$Locales;\n    class Resource$Platforms$Properties$Topicstates {\n        constructor(context) {\n            this.context = context;\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://ideahub.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    ideahub_v1alpha.Resource$Platforms$Properties$Topicstates = Resource$Platforms$Properties$Topicstates;\n})(ideahub_v1alpha || (exports.ideahub_v1alpha = ideahub_v1alpha = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}