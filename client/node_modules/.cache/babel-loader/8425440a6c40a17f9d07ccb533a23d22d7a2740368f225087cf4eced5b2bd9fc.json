{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloudiot_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar cloudiot_v1;\n(function (cloudiot_v1) {\n  /**\n   * Cloud IoT API\n   *\n   * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const cloudiot = google.cloudiot('v1');\n   * ```\n   */\n  class Cloudiot {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.projects = new Resource$Projects(this.context);\n    }\n  }\n  cloudiot_v1.Cloudiot = Cloudiot;\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n  }\n  cloudiot_v1.Resource$Projects = Resource$Projects;\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.registries = new Resource$Projects$Locations$Registries(this.context);\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations = Resource$Projects$Locations;\n  class Resource$Projects$Locations$Registries {\n    constructor(context) {\n      this.context = context;\n      this.devices = new Resource$Projects$Locations$Registries$Devices(this.context);\n      this.groups = new Resource$Projects$Locations$Registries$Groups(this.context);\n    }\n    bindDeviceToGateway(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}:bindDeviceToGateway').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/registries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/registries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    unbindDeviceFromGateway(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}:unbindDeviceFromGateway').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations$Registries = Resource$Projects$Locations$Registries;\n  class Resource$Projects$Locations$Registries$Devices {\n    constructor(context) {\n      this.context = context;\n      this.configVersions = new Resource$Projects$Locations$Registries$Devices$Configversions(this.context);\n      this.states = new Resource$Projects$Locations$Registries$Devices$States(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/devices').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/devices').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    modifyCloudToDeviceConfig(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:modifyCloudToDeviceConfig').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    sendCommandToDevice(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}:sendCommandToDevice').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations$Registries$Devices = Resource$Projects$Locations$Registries$Devices;\n  class Resource$Projects$Locations$Registries$Devices$Configversions {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/configVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations$Registries$Devices$Configversions = Resource$Projects$Locations$Registries$Devices$Configversions;\n  class Resource$Projects$Locations$Registries$Devices$States {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+name}/states').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations$Registries$Devices$States = Resource$Projects$Locations$Registries$Devices$States;\n  class Resource$Projects$Locations$Registries$Groups {\n    constructor(context) {\n      this.context = context;\n      this.devices = new Resource$Projects$Locations$Registries$Groups$Devices(this.context);\n    }\n    getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['resource'],\n        pathParams: ['resource'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations$Registries$Groups = Resource$Projects$Locations$Registries$Groups;\n  class Resource$Projects$Locations$Registries$Groups$Devices {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/devices').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  cloudiot_v1.Resource$Projects$Locations$Registries$Groups$Devices = Resource$Projects$Locations$Registries$Groups$Devices;\n})(cloudiot_v1 || (exports.cloudiot_v1 = cloudiot_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","cloudiot_v1","googleapis_common_1","require","Cloudiot","constructor","options","google","context","_options","projects","Resource$Projects","locations","Resource$Projects$Locations","registries","Resource$Projects$Locations$Registries","devices","Resource$Projects$Locations$Registries$Devices","groups","Resource$Projects$Locations$Registries$Groups","bindDeviceToGateway","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","create","delete","get","getIamPolicy","list","patch","setIamPolicy","testIamPermissions","unbindDeviceFromGateway","configVersions","Resource$Projects$Locations$Registries$Devices$Configversions","states","Resource$Projects$Locations$Registries$Devices$States","modifyCloudToDeviceConfig","sendCommandToDevice","Resource$Projects$Locations$Registries$Groups$Devices"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis/build/src/apis/cloudiot/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloudiot_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar cloudiot_v1;\n(function (cloudiot_v1) {\n    /**\n     * Cloud IoT API\n     *\n     * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const cloudiot = google.cloudiot('v1');\n     * ```\n     */\n    class Cloudiot {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    cloudiot_v1.Cloudiot = Cloudiot;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    cloudiot_v1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.registries = new Resource$Projects$Locations$Registries(this.context);\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Registries {\n        constructor(context) {\n            this.context = context;\n            this.devices = new Resource$Projects$Locations$Registries$Devices(this.context);\n            this.groups = new Resource$Projects$Locations$Registries$Groups(this.context);\n        }\n        bindDeviceToGateway(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}:bindDeviceToGateway').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/registries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/registries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        unbindDeviceFromGateway(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}:unbindDeviceFromGateway').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations$Registries = Resource$Projects$Locations$Registries;\n    class Resource$Projects$Locations$Registries$Devices {\n        constructor(context) {\n            this.context = context;\n            this.configVersions =\n                new Resource$Projects$Locations$Registries$Devices$Configversions(this.context);\n            this.states = new Resource$Projects$Locations$Registries$Devices$States(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/devices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/devices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        modifyCloudToDeviceConfig(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:modifyCloudToDeviceConfig').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        sendCommandToDevice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}:sendCommandToDevice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations$Registries$Devices = Resource$Projects$Locations$Registries$Devices;\n    class Resource$Projects$Locations$Registries$Devices$Configversions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}/configVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations$Registries$Devices$Configversions = Resource$Projects$Locations$Registries$Devices$Configversions;\n    class Resource$Projects$Locations$Registries$Devices$States {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+name}/states').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations$Registries$Devices$States = Resource$Projects$Locations$Registries$Devices$States;\n    class Resource$Projects$Locations$Registries$Groups {\n        constructor(context) {\n            this.context = context;\n            this.devices = new Resource$Projects$Locations$Registries$Groups$Devices(this.context);\n        }\n        getIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:getIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setIamPolicy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:setIamPolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        testIamPermissions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+resource}:testIamPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['resource'],\n                pathParams: ['resource'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations$Registries$Groups = Resource$Projects$Locations$Registries$Groups;\n    class Resource$Projects$Locations$Registries$Groups$Devices {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://cloudiot.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/devices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    cloudiot_v1.Resource$Projects$Locations$Registries$Groups$Devices = Resource$Projects$Locations$Registries$Groups$Devices;\n})(cloudiot_v1 || (exports.cloudiot_v1 = cloudiot_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}