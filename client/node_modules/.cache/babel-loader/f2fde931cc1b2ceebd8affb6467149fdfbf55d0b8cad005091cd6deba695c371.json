{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAPI = void 0;\nfunction getAPI(api, options,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nversions, context) {\n  let version;\n  if (typeof options === 'string') {\n    version = options;\n    options = {};\n  } else if (typeof options === 'object') {\n    version = options.version;\n    delete options.version;\n  } else {\n    throw new Error('Argument error: Accepts only string or object');\n  }\n  try {\n    const ctr = versions[version];\n    const ep = new ctr(options, context);\n    return Object.freeze(ep);\n  } catch (e) {\n    throw new Error(`Unable to load endpoint ${api}(\"${version}\"): ${e.message}`);\n  }\n}\nexports.getAPI = getAPI;","map":{"version":3,"names":["Object","defineProperty","exports","value","getAPI","api","options","versions","context","version","Error","ctr","ep","freeze","e","message"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis-common/build/src/apiIndex.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPI = void 0;\nfunction getAPI(api, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nversions, context) {\n    let version;\n    if (typeof options === 'string') {\n        version = options;\n        options = {};\n    }\n    else if (typeof options === 'object') {\n        version = options.version;\n        delete options.version;\n    }\n    else {\n        throw new Error('Argument error: Accepts only string or object');\n    }\n    try {\n        const ctr = versions[version];\n        const ep = new ctr(options, context);\n        return Object.freeze(ep);\n    }\n    catch (e) {\n        throw new Error(`Unable to load endpoint ${api}(\"${version}\"): ${e.message}`);\n    }\n}\nexports.getAPI = getAPI;\n//# sourceMappingURL=apiIndex.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,SAASA,MAAMA,CAACC,GAAG,EAAEC,OAAO;AAC5B;AACAC,QAAQ,EAAEC,OAAO,EAAE;EACf,IAAIC,OAAO;EACX,IAAI,OAAOH,OAAO,KAAK,QAAQ,EAAE;IAC7BG,OAAO,GAAGH,OAAO;IACjBA,OAAO,GAAG,CAAC,CAAC;EAChB,CAAC,MACI,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAClCG,OAAO,GAAGH,OAAO,CAACG,OAAO;IACzB,OAAOH,OAAO,CAACG,OAAO;EAC1B,CAAC,MACI;IACD,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EACpE;EACA,IAAI;IACA,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,OAAO,CAAC;IAC7B,MAAMG,EAAE,GAAG,IAAID,GAAG,CAACL,OAAO,EAAEE,OAAO,CAAC;IACpC,OAAOR,MAAM,CAACa,MAAM,CAACD,EAAE,CAAC;EAC5B,CAAC,CACD,OAAOE,CAAC,EAAE;IACN,MAAM,IAAIJ,KAAK,CAAE,2BAA0BL,GAAI,KAAII,OAAQ,OAAMK,CAAC,CAACC,OAAQ,EAAC,CAAC;EACjF;AACJ;AACAb,OAAO,CAACE,MAAM,GAAGA,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}