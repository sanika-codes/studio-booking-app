{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.baremetalsolution_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar baremetalsolution_v2;\n(function (baremetalsolution_v2) {\n  /**\n   * Bare Metal Solution API\n   *\n   * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const baremetalsolution = google.baremetalsolution('v2');\n   * ```\n   */\n  class Baremetalsolution {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.projects = new Resource$Projects(this.context);\n    }\n  }\n  baremetalsolution_v2.Baremetalsolution = Baremetalsolution;\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n  }\n  baremetalsolution_v2.Resource$Projects = Resource$Projects;\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.instanceProvisioningSettings = new Resource$Projects$Locations$Instanceprovisioningsettings(this.context);\n      this.instances = new Resource$Projects$Locations$Instances(this.context);\n      this.networks = new Resource$Projects$Locations$Networks(this.context);\n      this.nfsShares = new Resource$Projects$Locations$Nfsshares(this.context);\n      this.operations = new Resource$Projects$Locations$Operations(this.context);\n      this.provisioningConfigs = new Resource$Projects$Locations$Provisioningconfigs(this.context);\n      this.provisioningQuotas = new Resource$Projects$Locations$Provisioningquotas(this.context);\n      this.sshKeys = new Resource$Projects$Locations$Sshkeys(this.context);\n      this.volumes = new Resource$Projects$Locations$Volumes(this.context);\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations = Resource$Projects$Locations;\n  class Resource$Projects$Locations$Instanceprovisioningsettings {\n    constructor(context) {\n      this.context = context;\n    }\n    fetch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+location}/instanceProvisioningSettings:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['location'],\n        pathParams: ['location'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Instanceprovisioningsettings = Resource$Projects$Locations$Instanceprovisioningsettings;\n  class Resource$Projects$Locations$Instances {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    detachLun(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+instance}:detachLun').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['instance'],\n        pathParams: ['instance'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    disableInteractiveSerialConsole(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:disableInteractiveSerialConsole').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    enableInteractiveSerialConsole(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:enableInteractiveSerialConsole').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    rename(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:rename').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    reset(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:reset').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    start(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:start').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    stop(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:stop').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Instances = Resource$Projects$Locations$Instances;\n  class Resource$Projects$Locations$Networks {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/networks').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    listNetworkUsage(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+location}/networks:listNetworkUsage').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['location'],\n        pathParams: ['location'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Networks = Resource$Projects$Locations$Networks;\n  class Resource$Projects$Locations$Nfsshares {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/nfsShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/nfsShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Nfsshares = Resource$Projects$Locations$Nfsshares;\n  class Resource$Projects$Locations$Operations {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Operations = Resource$Projects$Locations$Operations;\n  class Resource$Projects$Locations$Provisioningconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/provisioningConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    submit(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/provisioningConfigs:submit').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Provisioningconfigs = Resource$Projects$Locations$Provisioningconfigs;\n  class Resource$Projects$Locations$Provisioningquotas {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/provisioningQuotas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Provisioningquotas = Resource$Projects$Locations$Provisioningquotas;\n  class Resource$Projects$Locations$Sshkeys {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/sshKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/sshKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Sshkeys = Resource$Projects$Locations$Sshkeys;\n  class Resource$Projects$Locations$Volumes {\n    constructor(context) {\n      this.context = context;\n      this.luns = new Resource$Projects$Locations$Volumes$Luns(this.context);\n      this.snapshots = new Resource$Projects$Locations$Volumes$Snapshots(this.context);\n    }\n    evict(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:evict').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    resize(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+volume}:resize').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['volume'],\n        pathParams: ['volume'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Volumes = Resource$Projects$Locations$Volumes;\n  class Resource$Projects$Locations$Volumes$Luns {\n    constructor(context) {\n      this.context = context;\n    }\n    evict(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}:evict').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/luns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Volumes$Luns = Resource$Projects$Locations$Volumes$Luns;\n  class Resource$Projects$Locations$Volumes$Snapshots {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/snapshots').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+parent}/snapshots').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    restoreVolumeSnapshot(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2/{+volumeSnapshot}:restoreVolumeSnapshot').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['volumeSnapshot'],\n        pathParams: ['volumeSnapshot'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  baremetalsolution_v2.Resource$Projects$Locations$Volumes$Snapshots = Resource$Projects$Locations$Volumes$Snapshots;\n})(baremetalsolution_v2 || (exports.baremetalsolution_v2 = baremetalsolution_v2 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","baremetalsolution_v2","googleapis_common_1","require","Baremetalsolution","constructor","options","google","context","_options","projects","Resource$Projects","locations","Resource$Projects$Locations","instanceProvisioningSettings","Resource$Projects$Locations$Instanceprovisioningsettings","instances","Resource$Projects$Locations$Instances","networks","Resource$Projects$Locations$Networks","nfsShares","Resource$Projects$Locations$Nfsshares","operations","Resource$Projects$Locations$Operations","provisioningConfigs","Resource$Projects$Locations$Provisioningconfigs","provisioningQuotas","Resource$Projects$Locations$Provisioningquotas","sshKeys","Resource$Projects$Locations$Sshkeys","volumes","Resource$Projects$Locations$Volumes","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","fetch","create","detachLun","disableInteractiveSerialConsole","enableInteractiveSerialConsole","patch","rename","reset","start","stop","listNetworkUsage","delete","submit","luns","Resource$Projects$Locations$Volumes$Luns","snapshots","Resource$Projects$Locations$Volumes$Snapshots","evict","resize","restoreVolumeSnapshot"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis/build/src/apis/baremetalsolution/v2.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baremetalsolution_v2 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar baremetalsolution_v2;\n(function (baremetalsolution_v2) {\n    /**\n     * Bare Metal Solution API\n     *\n     * Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const baremetalsolution = google.baremetalsolution('v2');\n     * ```\n     */\n    class Baremetalsolution {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    baremetalsolution_v2.Baremetalsolution = Baremetalsolution;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    baremetalsolution_v2.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.instanceProvisioningSettings =\n                new Resource$Projects$Locations$Instanceprovisioningsettings(this.context);\n            this.instances = new Resource$Projects$Locations$Instances(this.context);\n            this.networks = new Resource$Projects$Locations$Networks(this.context);\n            this.nfsShares = new Resource$Projects$Locations$Nfsshares(this.context);\n            this.operations = new Resource$Projects$Locations$Operations(this.context);\n            this.provisioningConfigs =\n                new Resource$Projects$Locations$Provisioningconfigs(this.context);\n            this.provisioningQuotas =\n                new Resource$Projects$Locations$Provisioningquotas(this.context);\n            this.sshKeys = new Resource$Projects$Locations$Sshkeys(this.context);\n            this.volumes = new Resource$Projects$Locations$Volumes(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}/locations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Instanceprovisioningsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        fetch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+location}/instanceProvisioningSettings:fetch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['location'],\n                pathParams: ['location'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Instanceprovisioningsettings = Resource$Projects$Locations$Instanceprovisioningsettings;\n    class Resource$Projects$Locations$Instances {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        detachLun(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+instance}:detachLun').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['instance'],\n                pathParams: ['instance'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        disableInteractiveSerialConsole(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:disableInteractiveSerialConsole').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        enableInteractiveSerialConsole(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:enableInteractiveSerialConsole').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/instances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        rename(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:rename').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        reset(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:reset').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        start(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:start').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:stop').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Instances = Resource$Projects$Locations$Instances;\n    class Resource$Projects$Locations$Networks {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/networks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listNetworkUsage(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+location}/networks:listNetworkUsage').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['location'],\n                pathParams: ['location'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Networks = Resource$Projects$Locations$Networks;\n    class Resource$Projects$Locations$Nfsshares {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/nfsShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/nfsShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Nfsshares = Resource$Projects$Locations$Nfsshares;\n    class Resource$Projects$Locations$Operations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Operations = Resource$Projects$Locations$Operations;\n    class Resource$Projects$Locations$Provisioningconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/provisioningConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        submit(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/provisioningConfigs:submit').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Provisioningconfigs = Resource$Projects$Locations$Provisioningconfigs;\n    class Resource$Projects$Locations$Provisioningquotas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/provisioningQuotas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Provisioningquotas = Resource$Projects$Locations$Provisioningquotas;\n    class Resource$Projects$Locations$Sshkeys {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/sshKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/sshKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Sshkeys = Resource$Projects$Locations$Sshkeys;\n    class Resource$Projects$Locations$Volumes {\n        constructor(context) {\n            this.context = context;\n            this.luns = new Resource$Projects$Locations$Volumes$Luns(this.context);\n            this.snapshots = new Resource$Projects$Locations$Volumes$Snapshots(this.context);\n        }\n        evict(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:evict').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/volumes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resize(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+volume}:resize').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['volume'],\n                pathParams: ['volume'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Volumes = Resource$Projects$Locations$Volumes;\n    class Resource$Projects$Locations$Volumes$Luns {\n        constructor(context) {\n            this.context = context;\n        }\n        evict(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}:evict').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/luns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Volumes$Luns = Resource$Projects$Locations$Volumes$Luns;\n    class Resource$Projects$Locations$Volumes$Snapshots {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/snapshots').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+parent}/snapshots').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        restoreVolumeSnapshot(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://baremetalsolution.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2/{+volumeSnapshot}:restoreVolumeSnapshot').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['volumeSnapshot'],\n                pathParams: ['volumeSnapshot'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    baremetalsolution_v2.Resource$Projects$Locations$Volumes$Snapshots = Resource$Projects$Locations$Volumes$Snapshots;\n})(baremetalsolution_v2 || (exports.baremetalsolution_v2 = baremetalsolution_v2 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}