{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.integrations_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar integrations_v1alpha;\n(function (integrations_v1alpha) {\n  /**\n   * Application Integration API\n   *\n   *\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const integrations = google.integrations('v1alpha');\n   * ```\n   */\n  class Integrations {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.callback = new Resource$Callback(this.context);\n      this.connectorPlatformRegions = new Resource$Connectorplatformregions(this.context);\n      this.projects = new Resource$Projects(this.context);\n    }\n  }\n  integrations_v1alpha.Integrations = Integrations;\n  class Resource$Callback {\n    constructor(context) {\n      this.context = context;\n    }\n    generateToken(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/callback:generateToken').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Callback = Resource$Callback;\n  class Resource$Connectorplatformregions {\n    constructor(context) {\n      this.context = context;\n    }\n    enumerate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/connectorPlatformRegions:enumerate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Connectorplatformregions = Resource$Connectorplatformregions;\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n  }\n  integrations_v1alpha.Resource$Projects = Resource$Projects;\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.appsScriptProjects = new Resource$Projects$Locations$Appsscriptprojects(this.context);\n      this.authConfigs = new Resource$Projects$Locations$Authconfigs(this.context);\n      this.certificates = new Resource$Projects$Locations$Certificates(this.context);\n      this.connections = new Resource$Projects$Locations$Connections(this.context);\n      this.integrations = new Resource$Projects$Locations$Integrations(this.context);\n      this.products = new Resource$Projects$Locations$Products(this.context);\n      this.sfdcInstances = new Resource$Projects$Locations$Sfdcinstances(this.context);\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations = Resource$Projects$Locations;\n  class Resource$Projects$Locations$Appsscriptprojects {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    link(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects:link').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Appsscriptprojects = Resource$Projects$Locations$Appsscriptprojects;\n  class Resource$Projects$Locations$Authconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Authconfigs = Resource$Projects$Locations$Authconfigs;\n  class Resource$Projects$Locations$Certificates {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Certificates = Resource$Projects$Locations$Certificates;\n  class Resource$Projects$Locations$Connections {\n    constructor(context) {\n      this.context = context;\n      this.runtimeActionSchemas = new Resource$Projects$Locations$Connections$Runtimeactionschemas(this.context);\n      this.runtimeEntitySchemas = new Resource$Projects$Locations$Connections$Runtimeentityschemas(this.context);\n    }\n    getConnectionSchemaMetadata(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/connections').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Connections = Resource$Projects$Locations$Connections;\n  class Resource$Projects$Locations$Connections$Runtimeactionschemas {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/runtimeActionSchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeactionschemas = Resource$Projects$Locations$Connections$Runtimeactionschemas;\n  class Resource$Projects$Locations$Connections$Runtimeentityschemas {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/runtimeEntitySchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeentityschemas = Resource$Projects$Locations$Connections$Runtimeentityschemas;\n  class Resource$Projects$Locations$Integrations {\n    constructor(context) {\n      this.context = context;\n      this.executions = new Resource$Projects$Locations$Integrations$Executions(this.context);\n      this.versions = new Resource$Projects$Locations$Integrations$Versions(this.context);\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    execute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    schedule(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Integrations = Resource$Projects$Locations$Integrations;\n  class Resource$Projects$Locations$Integrations$Executions {\n    constructor(context) {\n      this.context = context;\n      this.suspensions = new Resource$Projects$Locations$Integrations$Executions$Suspensions(this.context);\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Integrations$Executions = Resource$Projects$Locations$Integrations$Executions;\n  class Resource$Projects$Locations$Integrations$Executions$Suspensions {\n    constructor(context) {\n      this.context = context;\n    }\n    lift(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:lift').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/suspensions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    resolve(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:resolve').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Integrations$Executions$Suspensions = Resource$Projects$Locations$Integrations$Executions$Suspensions;\n  class Resource$Projects$Locations$Integrations$Versions {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    download(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    publish(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['integrationVersion'],\n        pathParams: ['integrationVersion'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    unpublish(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:unpublish').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    upload(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions:upload').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Integrations$Versions = Resource$Projects$Locations$Integrations$Versions;\n  class Resource$Projects$Locations$Products {\n    constructor(context) {\n      this.context = context;\n      this.authConfigs = new Resource$Projects$Locations$Products$Authconfigs(this.context);\n      this.certificates = new Resource$Projects$Locations$Products$Certificates(this.context);\n      this.integrations = new Resource$Projects$Locations$Products$Integrations(this.context);\n      this.integrationtemplates = new Resource$Projects$Locations$Products$Integrationtemplates(this.context);\n      this.sfdcInstances = new Resource$Projects$Locations$Products$Sfdcinstances(this.context);\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products = Resource$Projects$Locations$Products;\n  class Resource$Projects$Locations$Products$Authconfigs {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Authconfigs = Resource$Projects$Locations$Products$Authconfigs;\n  class Resource$Projects$Locations$Products$Certificates {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Certificates = Resource$Projects$Locations$Products$Certificates;\n  class Resource$Projects$Locations$Products$Integrations {\n    constructor(context) {\n      this.context = context;\n      this.executions = new Resource$Projects$Locations$Products$Integrations$Executions(this.context);\n      this.versions = new Resource$Projects$Locations$Products$Integrations$Versions(this.context);\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    execute(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    schedule(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations = Resource$Projects$Locations$Products$Integrations;\n  class Resource$Projects$Locations$Products$Integrations$Executions {\n    constructor(context) {\n      this.context = context;\n      this.suspensions = new Resource$Projects$Locations$Products$Integrations$Executions$Suspensions(this.context);\n    }\n    cancel(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions = Resource$Projects$Locations$Products$Integrations$Executions;\n  class Resource$Projects$Locations$Products$Integrations$Executions$Suspensions {\n    constructor(context) {\n      this.context = context;\n    }\n    lift(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:lift').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/suspensions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    resolve(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:resolve').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions$Suspensions = Resource$Projects$Locations$Products$Integrations$Executions$Suspensions;\n  class Resource$Projects$Locations$Products$Integrations$Versions {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    download(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    publish(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['integrationVersion'],\n        pathParams: ['integrationVersion'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    unpublish(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}:unpublish').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    upload(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions:upload').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Versions = Resource$Projects$Locations$Products$Integrations$Versions;\n  class Resource$Projects$Locations$Products$Integrationtemplates {\n    constructor(context) {\n      this.context = context;\n      this.versions = new Resource$Projects$Locations$Products$Integrationtemplates$Versions(this.context);\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates = Resource$Projects$Locations$Products$Integrationtemplates;\n  class Resource$Projects$Locations$Products$Integrationtemplates$Versions {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates$Versions = Resource$Projects$Locations$Products$Integrationtemplates$Versions;\n  class Resource$Projects$Locations$Products$Sfdcinstances {\n    constructor(context) {\n      this.context = context;\n      this.sfdcChannels = new Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances = Resource$Projects$Locations$Products$Sfdcinstances;\n  class Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels;\n  class Resource$Projects$Locations$Sfdcinstances {\n    constructor(context) {\n      this.context = context;\n      this.sfdcChannels = new Resource$Projects$Locations$Sfdcinstances$Sfdcchannels(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances = Resource$Projects$Locations$Sfdcinstances;\n  class Resource$Projects$Locations$Sfdcinstances$Sfdcchannels {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Sfdcinstances$Sfdcchannels;\n})(integrations_v1alpha || (exports.integrations_v1alpha = integrations_v1alpha = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","integrations_v1alpha","googleapis_common_1","require","Integrations","constructor","options","google","context","_options","callback","Resource$Callback","connectorPlatformRegions","Resource$Connectorplatformregions","projects","Resource$Projects","generateToken","paramsOrCallback","optionsOrCallback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","enumerate","locations","Resource$Projects$Locations","appsScriptProjects","Resource$Projects$Locations$Appsscriptprojects","authConfigs","Resource$Projects$Locations$Authconfigs","certificates","Resource$Projects$Locations$Certificates","connections","Resource$Projects$Locations$Connections","integrations","Resource$Projects$Locations$Integrations","products","Resource$Projects$Locations$Products","sfdcInstances","Resource$Projects$Locations$Sfdcinstances","create","link","delete","get","list","patch","runtimeActionSchemas","Resource$Projects$Locations$Connections$Runtimeactionschemas","runtimeEntitySchemas","Resource$Projects$Locations$Connections$Runtimeentityschemas","getConnectionSchemaMetadata","executions","Resource$Projects$Locations$Integrations$Executions","versions","Resource$Projects$Locations$Integrations$Versions","execute","schedule","suspensions","Resource$Projects$Locations$Integrations$Executions$Suspensions","lift","resolve","download","publish","takeoverEditLock","unpublish","upload","Resource$Projects$Locations$Products$Authconfigs","Resource$Projects$Locations$Products$Certificates","Resource$Projects$Locations$Products$Integrations","integrationtemplates","Resource$Projects$Locations$Products$Integrationtemplates","Resource$Projects$Locations$Products$Sfdcinstances","Resource$Projects$Locations$Products$Integrations$Executions","Resource$Projects$Locations$Products$Integrations$Versions","Resource$Projects$Locations$Products$Integrations$Executions$Suspensions","cancel","Resource$Projects$Locations$Products$Integrationtemplates$Versions","sfdcChannels","Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels","Resource$Projects$Locations$Sfdcinstances$Sfdcchannels"],"sources":["D:/Amber Horizons/Clients/Vibini Creates/node_modules/googleapis/build/src/apis/integrations/v1alpha.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.integrations_v1alpha = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar integrations_v1alpha;\n(function (integrations_v1alpha) {\n    /**\n     * Application Integration API\n     *\n     *\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const integrations = google.integrations('v1alpha');\n     * ```\n     */\n    class Integrations {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.callback = new Resource$Callback(this.context);\n            this.connectorPlatformRegions = new Resource$Connectorplatformregions(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    integrations_v1alpha.Integrations = Integrations;\n    class Resource$Callback {\n        constructor(context) {\n            this.context = context;\n        }\n        generateToken(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/callback:generateToken').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Callback = Resource$Callback;\n    class Resource$Connectorplatformregions {\n        constructor(context) {\n            this.context = context;\n        }\n        enumerate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/connectorPlatformRegions:enumerate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Connectorplatformregions = Resource$Connectorplatformregions;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    integrations_v1alpha.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.appsScriptProjects =\n                new Resource$Projects$Locations$Appsscriptprojects(this.context);\n            this.authConfigs = new Resource$Projects$Locations$Authconfigs(this.context);\n            this.certificates = new Resource$Projects$Locations$Certificates(this.context);\n            this.connections = new Resource$Projects$Locations$Connections(this.context);\n            this.integrations = new Resource$Projects$Locations$Integrations(this.context);\n            this.products = new Resource$Projects$Locations$Products(this.context);\n            this.sfdcInstances = new Resource$Projects$Locations$Sfdcinstances(this.context);\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Appsscriptprojects {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        link(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/appsScriptProjects:link').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Appsscriptprojects = Resource$Projects$Locations$Appsscriptprojects;\n    class Resource$Projects$Locations$Authconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Authconfigs = Resource$Projects$Locations$Authconfigs;\n    class Resource$Projects$Locations$Certificates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Certificates = Resource$Projects$Locations$Certificates;\n    class Resource$Projects$Locations$Connections {\n        constructor(context) {\n            this.context = context;\n            this.runtimeActionSchemas =\n                new Resource$Projects$Locations$Connections$Runtimeactionschemas(this.context);\n            this.runtimeEntitySchemas =\n                new Resource$Projects$Locations$Connections$Runtimeentityschemas(this.context);\n        }\n        getConnectionSchemaMetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/connections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Connections = Resource$Projects$Locations$Connections;\n    class Resource$Projects$Locations$Connections$Runtimeactionschemas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/runtimeActionSchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeactionschemas = Resource$Projects$Locations$Connections$Runtimeactionschemas;\n    class Resource$Projects$Locations$Connections$Runtimeentityschemas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/runtimeEntitySchemas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Connections$Runtimeentityschemas = Resource$Projects$Locations$Connections$Runtimeentityschemas;\n    class Resource$Projects$Locations$Integrations {\n        constructor(context) {\n            this.context = context;\n            this.executions = new Resource$Projects$Locations$Integrations$Executions(this.context);\n            this.versions = new Resource$Projects$Locations$Integrations$Versions(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        execute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        schedule(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations = Resource$Projects$Locations$Integrations;\n    class Resource$Projects$Locations$Integrations$Executions {\n        constructor(context) {\n            this.context = context;\n            this.suspensions =\n                new Resource$Projects$Locations$Integrations$Executions$Suspensions(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations$Executions = Resource$Projects$Locations$Integrations$Executions;\n    class Resource$Projects$Locations$Integrations$Executions$Suspensions {\n        constructor(context) {\n            this.context = context;\n        }\n        lift(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:lift').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/suspensions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resolve(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:resolve').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations$Executions$Suspensions = Resource$Projects$Locations$Integrations$Executions$Suspensions;\n    class Resource$Projects$Locations$Integrations$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        publish(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['integrationVersion'],\n                pathParams: ['integrationVersion'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        unpublish(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:unpublish').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions:upload').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Integrations$Versions = Resource$Projects$Locations$Integrations$Versions;\n    class Resource$Projects$Locations$Products {\n        constructor(context) {\n            this.context = context;\n            this.authConfigs = new Resource$Projects$Locations$Products$Authconfigs(this.context);\n            this.certificates = new Resource$Projects$Locations$Products$Certificates(this.context);\n            this.integrations = new Resource$Projects$Locations$Products$Integrations(this.context);\n            this.integrationtemplates =\n                new Resource$Projects$Locations$Products$Integrationtemplates(this.context);\n            this.sfdcInstances =\n                new Resource$Projects$Locations$Products$Sfdcinstances(this.context);\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products = Resource$Projects$Locations$Products;\n    class Resource$Projects$Locations$Products$Authconfigs {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/authConfigs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Authconfigs = Resource$Projects$Locations$Products$Authconfigs;\n    class Resource$Projects$Locations$Products$Certificates {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/certificates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Certificates = Resource$Projects$Locations$Products$Certificates;\n    class Resource$Projects$Locations$Products$Integrations {\n        constructor(context) {\n            this.context = context;\n            this.executions =\n                new Resource$Projects$Locations$Products$Integrations$Executions(this.context);\n            this.versions =\n                new Resource$Projects$Locations$Products$Integrations$Versions(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        execute(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:execute').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/integrations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        schedule(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:schedule').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations = Resource$Projects$Locations$Products$Integrations;\n    class Resource$Projects$Locations$Products$Integrations$Executions {\n        constructor(context) {\n            this.context = context;\n            this.suspensions =\n                new Resource$Projects$Locations$Products$Integrations$Executions$Suspensions(this.context);\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/executions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions = Resource$Projects$Locations$Products$Integrations$Executions;\n    class Resource$Projects$Locations$Products$Integrations$Executions$Suspensions {\n        constructor(context) {\n            this.context = context;\n        }\n        lift(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:lift').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/suspensions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resolve(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:resolve').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Executions$Suspensions = Resource$Projects$Locations$Products$Integrations$Executions$Suspensions;\n    class Resource$Projects$Locations$Products$Integrations$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        download(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:download').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        publish(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:publish').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        takeoverEditLock(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+integrationVersion}:takeoverEditLock').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['integrationVersion'],\n                pathParams: ['integrationVersion'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        unpublish(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}:unpublish').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        upload(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions:upload').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrations$Versions = Resource$Projects$Locations$Products$Integrations$Versions;\n    class Resource$Projects$Locations$Products$Integrationtemplates {\n        constructor(context) {\n            this.context = context;\n            this.versions =\n                new Resource$Projects$Locations$Products$Integrationtemplates$Versions(this.context);\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates = Resource$Projects$Locations$Products$Integrationtemplates;\n    class Resource$Projects$Locations$Products$Integrationtemplates$Versions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/versions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Integrationtemplates$Versions = Resource$Projects$Locations$Products$Integrationtemplates$Versions;\n    class Resource$Projects$Locations$Products$Sfdcinstances {\n        constructor(context) {\n            this.context = context;\n            this.sfdcChannels =\n                new Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances = Resource$Projects$Locations$Products$Sfdcinstances;\n    class Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Products$Sfdcinstances$Sfdcchannels;\n    class Resource$Projects$Locations$Sfdcinstances {\n        constructor(context) {\n            this.context = context;\n            this.sfdcChannels =\n                new Resource$Projects$Locations$Sfdcinstances$Sfdcchannels(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcInstances').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances = Resource$Projects$Locations$Sfdcinstances;\n    class Resource$Projects$Locations$Sfdcinstances$Sfdcchannels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+parent}/sfdcChannels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://integrations.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1alpha/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    integrations_v1alpha.Resource$Projects$Locations$Sfdcinstances$Sfdcchannels = Resource$Projects$Locations$Sfdcinstances$Sfdcchannels;\n})(integrations_v1alpha || (exports.integrations_v1alpha = integrations_v1alpha = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}